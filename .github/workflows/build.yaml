name: Build application

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docker/**'
      - 'docker-compose.production.yml'
      - 'docker-compose.yml'
  pull_request:
    branches:
      - master

env:
  APP_URL: ${{ secrets.APP_URL }}
  APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
  APP_SECRET: ${{ secrets.APP_SECRET }}
  APP_RELEASE: ${{ github.sha }}

jobs:
  build:
    # needs: coding-standard
    runs-on: ubuntu-latest
    name: Build applications
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2

      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 2

      # - run: git checkout HEAD^

      # required for "git tag" presence for monorepo-builder split and changelog-linker git tags resolver; default is 1
      # https://github.com/actions/checkout#fetch-all-tags
      # - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      # see https://github.com/shivammathur/setup-php
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 7.4
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, dom, filter, gd, iconv, json, mbstring, pdo, intl
          coverage: xdebug # disable xdebug, pcov
          tools: cs2pr, phpstan
        env:
          update: true

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Run Symfony requirements
        run: php vendor/bin/requirements-checker

      - name: Check that arguments injected into services match type declarations
        run: php bin/console lint:container

      - name: Check the validation of YAML configuration files
        run: php vendor/bin/yaml-lint ./config

      - name: Run static code analysis
        run: phpstan analyse src --error-format=checkstyle | cs2pr

      - name: Run Unit Tests
        run: vendor/bin/phpunit --coverage-clover build/logs/clover.xml

      # TODO: Move to Docker global dependencies.
      - name: Run PHP Coveralls
        run: php vendor/bin/php-coveralls --verbose
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

      - name: Code Climate Coverage Action
        uses: paambaati/codeclimate-action@v2.6.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: vendor/bin/phpunit
          debug: true


  check_composer:
    runs-on: ubuntu-latest
    name: Check Composer
    steps:
      - uses: actions/checkout@v2

      - name: Check that platform requirements are satisfied.
        run: composer check-platform-reqs

      - name: Validates a composer.json and composer.lock.
        run: composer validate

  coding-standard:
    runs-on: ubuntu-latest
    name: Check Coding Standard
    steps:
      - uses: actions/checkout@v2

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest

      - name: Check Coding Standard
        run: vendor/bin/ecs check --xdebug --no-interaction

